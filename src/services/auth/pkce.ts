import { createHash } from "crypto";

/**
 * Function which generates a 48 char random string using
 * a-z A-Z 0-9 and -._~
 */
export const generateCodeVerifier = (): string => {
    const letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~';
    const code = [];

    for (let i = 0; i < 48; i++) {
        code.push(letters.charAt(Math.random() * letters.length));
    }

    return code.join("");
}

/**
 * Function which generates a 16 char random string using
 * a-z A-Z 0-9 and -._~
 * @returns 16 char string representing state 
 */
export const generateState = (): string => {
    const letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._~';
    const state = [];

    for (let i = 0; i < 16; i++) {
        state.push(letters.charAt(Math.random() * letters.length));
    }

    return state.join("");
}

/**
 * Function which hashes generated code
 * @param code 48 char code generated by code verifier 
 * @returns code after being hashed with sha256
 */
export const hash = (code: string): string => {
    return createHash('sha256').update(code).digest('base64');
}

/**
 * Function which generates code challenge using code
 * @param code 48 char code generated by code verifier
 * @returns code after being hashed and encoded in base 64
 */
export const generateCodeChallenge = (code: string): string => {
    const hashedCode = hash(code);

    return hashedCode.replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
}